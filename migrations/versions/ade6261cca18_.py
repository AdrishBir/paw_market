"""empty message

Revision ID: ade6261cca18
Revises: 
Create Date: 2024-11-30 23:20:52.819551

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import text

varchar_length = 1000
# revision identifiers, used by Alembic.
revision = 'ade6261cca18'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Buyers')
    op.drop_table('users')
    op.drop_table('orders')
    with op.batch_alter_table('products', schema=None) as batch_op:
        # First add the seller_id column
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=True))
        # Change image_url to VARCHAR(1000)
        batch_op.alter_column('image_url',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=1000),
               existing_nullable=True)

    # Get bind to execute SQL
    connection = op.get_bind()
    
    # Create default seller
    connection.execute(text("""
        INSERT INTO sellers (name, phone_number, address)
        VALUES ('Default Seller', '000-000-0000', 'Default Address')
        RETURNING id;
    """))
    
    # Update existing products with the default seller
    connection.execute(text("""
        UPDATE products 
        SET seller_id = (SELECT id FROM sellers ORDER BY id LIMIT 1)
        WHERE seller_id IS NULL;
    """))
    
    # 3. Now make the column NOT NULL
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('seller_id',
                            existing_type=sa.Integer(),
                            nullable=False)
    
    # Add the foreign key constraint
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_foreign_key(
            'fk_product_seller', 'sellers',
            ['seller_id'], ['id']
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint('fk_product_seller', type_='foreignkey')
        batch_op.alter_column('image_url',
               existing_type=sa.String(length=1000),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.drop_column('seller_id')

    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('buyer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['buyers.id'], name='orders_buyer_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='orders_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('user_type', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_table('Buyers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('Buyername', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('Buyer_type', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Buyers_pkey'),
    sa.UniqueConstraint('Buyername', name='Buyers_Buyername_key'),
    sa.UniqueConstraint('email', name='Buyers_email_key')
    )
    # ### end Alembic commands ###
